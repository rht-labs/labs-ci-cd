{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "sonarqube",
    "creationTimestamp": null
  },
  "objects": [
    {
      "apiVersion": "v1",
      "kind": "ImageStream",
      "metadata": {
        "name": "sonarqube",
        "labels": {
          "build": "sonarqube"
        }
      },
      "spec": {
        "tags": [
          {
            "name": "latest",
            "annotations": {
              "openshift.io/imported-from": "docker.io/library/sonarqube"
            },
            "from": {
              "kind": "DockerImage",
              "name": "docker.io/library/sonarqube"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ImageStream",
      "metadata": {
        "labels": {
          "build": "sonarqube"
        },
        "name": "sonarqube-with-plugins"
      },
      "spec": {}
    },
    {
      "apiVersion": "v1",
      "kind": "PersistentVolumeClaim",
      "metadata": {
        "name": "sonarqube"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "${VOLUME_CAPACITY}"
          }
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Secret",
      "metadata": {
        "name": "sonar-database-secret"
      },
      "stringData": {
        "database-password": "${JDBC_PASSWORD}",
        "database-user": "${JDBC_USER}"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Route",
      "metadata": {
        "creationTimestamp": null,
        "labels": {
          "appName": "sonarqube"
        },
        "name": "sonarqube"
      },
      "spec": {
        "port": {
          "targetPort": "9000-tcp"
        },
        "to": {
          "kind": "Service",
          "name": "sonarqube",
          "weight": 100
        },
        "wildcardPolicy": "None"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "creationTimestamp": null,
        "labels": {
          "app": "sonarqube",
          "appName": "sonarqube"
        },
        "name": "sonarqube"
      },
      "spec": {
        "ports": [
          {
            "name": "9000-tcp",
            "port": 9000,
            "protocol": "TCP",
            "targetPort": 9000
          }
        ],
        "selector": {
          "app": "sonarqube",
          "deploymentconfig": "sonarqube"
        },
        "sessionAffinity": "None",
        "type": "ClusterIP"
      },
      "status": {
        "loadBalancer": {}
      }
    },
    {
      "apiVersion": "v1",
      "kind": "BuildConfig",
      "metadata": {
        "creationTimestamp": null,
        "labels": {
          "app": "sonarqube",
          "appName": "sonarqube"
        },
        "name": "sonarqube"
      },
      "spec": {
        "nodeSelector": null,
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "sonarqube-with-plugins:latest"
          }
        },
        "postCommit": {},
        "resources": {},
        "runPolicy": "Serial",
        "source": {
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "${SOURCE_REPOSITORY_REF}"
          },
          "contextDir": "${SOURCE_REPOSITORY_CONTEXT_DIR}",
          "type": "Git"
        },
        "strategy": {
          "dockerStrategy": {
            "from": {
              "kind": "ImageStreamTag",
              "name": "sonarqube:latest"
            },
            "env": [
              {
                "name": "SONAR_PLUGINS_LIST",
                "value": "${PLUGINS_LIST}"
              }
            ],
            "noCache": false
          },
          "type": "Docker"
        },
        "triggers": [
          {
            "type": "ConfigChange"
          }
        ]
      },
      "status": {
        "lastVersion": 0
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "labels": {
          "app": "sonarqube",
          "appName": "sonarqube",
          "name": "sonarqube"
        },
        "name": "sonarqube"
      },
      "spec": {
        "replicas": 1,
        "selector": {
          "app": "sonarqube",
          "deploymentconfig": "sonarqube"
        },
        "strategy": {
          "activeDeadlineSeconds": 21600,
          "resources": {},
          "recreateParams": {
            "timeoutSeconds": 600
          },
          "type": "Recreate"
        },
        "template": {
          "metadata": {
            "labels": {
              "app": "sonarqube",
              "deploymentconfig": "sonarqube"
            }
          },
          "spec": {
            "containers": [
              {
                "env": [
                  {
                    "name": "SONAR_PLUGIN_LIST",
                    "value": "${SONAR_PLUGIN_LIST}"
                  },
                  {
                    "name": "SONARQUBE_WEB_JVM_OPTS",
                    "value": "${WEB_JVM_OPTS}"
                  },
                  {
                    "name": "JDBC_USERNAME",
                    "valueFrom": {
                      "secretKeyRef": {
                        "key": "database-user",
                        "name": "sonar-database-secret"
                      }
                    }
                  },
                  {
                    "name": "JDBC_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "key": "database-password",
                        "name": "sonar-database-secret"
                      }
                    }
                  },
                  {
                    "name": "JDBC_URL",
                    "value": "${JDBC_URL}"
                  },
                  {
                    "name": "LDAP_BINDDN",
                    "value": "${LDAP_BINDDN}"
                  },
                  {
                    "name": "LDAP_BINDPASSWD",
                    "value": "${LDAP_BINDPASSWD}"
                  },
                  {
                    "name": "LDAP_URL",
                    "value": "${LDAP_URL}"
                  },
                  {
                    "name": "LDAP_REALM",
                    "value": "${LDAP_REALM}"
                  },
                  {
                    "name": "LDAP_CONTEXTFACTORY",
                    "value": "${LDAP_CONTEXT_FACTORY}"
                  },
                  {
                    "name": "LDAP_STARTTLS",
                    "value": "${LDAP_STARTTLS}"
                  },
                  {
                    "name": "LDAP_AUTHENTICATION",
                    "value": "${LDAP_AUTHENTICATION_METHOD}"
                  },
                  {
                    "name": "LDAP_USER_BASEDN",
                    "value": "${LDAP_USER_BASEDN}"
                  },
                  {
                    "name": "LDAP_USER_REQUEST",
                    "value": "${LDAP_USER_REQUEST}"
                  },
                  {
                    "name": "LDAP_USER_REAL_NAME_ATTR",
                    "value": "${LDAP_USER_REAL_NAME_ATTR}"
                  },
                  {
                    "name": "LDAP_USER_EMAIL_ATTR",
                    "value": "${LDAP_USER_EMAIL_ATTR}"
                  },
                  {
                    "name": "LDAP_GROUP_BASEDN",
                    "value": "${LDAP_GROUP_BASEDN}"
                  },
                  {
                    "name": "LDAP_GROUP_REQUEST",
                    "value": "${LDAP_GROUP_REQUEST}"
                  },
                  {
                    "name": "LDAP_GROUP_ID_ATTR",
                    "value": "${LDAP_GROUP_ID_ATTR}"
                  },
                  {
                    "name": "FORCE_AUTHENTICATION",
                    "value": "${FORCE_AUTHENTICATION}"
                  },
                  {
                    "name": "CA_CERT_URL",
                    "value": "${CA_CERT_URL}"
                  },
                  {
                    "name": "EXTRA_JVM_ARGS",
                    "value": "${EXTRA_JVM_ARGS}"
                  }
                ],
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/",
                    "port": 9000,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 45,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 3
                },
                "name": "sonarqube",
                "ports": [
                  {
                    "containerPort": 9000,
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "limits": {
                    "cpu": "${CPU_LIMIT}",
                    "memory": "${MEMORY_LIMIT}"
                  },
                  "requests": {
                    "cpu": "500m",
                    "memory": "1Gi"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "volumeMounts": [
                  {
                    "mountPath": "/opt/sonarqube/data",
                    "name": "sonarqube"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "securityContext": {},
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "name": "sonarqube",
                "persistentVolumeClaim": {
                  "claimName": "sonarqube"
                }
              }
            ]
          }
        },
        "test": false,
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "sonarqube"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "sonarqube-with-plugins:latest"
              }
            }
          }
        ]
      },
      "status": {}
    }
  ],
  "parameters": [
    {
      "name": "SOURCE_REPOSITORY_URL",
      "displayName": "Git Repository URL for SonarQube Build",
      "description": "The URL of the repository with the SonarQube container image build.",
      "required": true,
      "value": "https://github.com/rht-labs/openshift-sonarqube"
    },
    {
      "name": "SOURCE_REPOSITORY_REF",
      "displayName": "Git Reference",
      "description": "Set this to a branch name, tag or other ref of git repository if you are not using the default (master) branch."
    },
    {
      "name": "SOURCE_REPOSITORY_CONTEXT_DIR",
      "displayName": "Git Reference",
      "description": "The directory in the source repository where the SonarQube docker build is."
    },
    {
      "name": "JDBC_USER",
      "displayName": "Database Connection Username",
      "description": "User that will be used for accessing the database.",
      "required": true
    },
    {
      "name": "JDBC_PASSWORD",
      "displayName": "Database Connection Password",
      "description": "Password for the database connection user.",
      "required": true
    },
    {
      "name": "VOLUME_CAPACITY",
      "displayName": "Volume Capacity",
      "description": "Volume space available for sonar local data like plugins. values such as 512Mi, 2Gi.",
      "value": "5Gi",
      "required": true
    },
    {
      "name": "CPU_LIMIT",
      "displayName": "SonarQube CPU limit",
      "description": "Number of virtual CPUs to allocate for SonarQube",
      "value": "2",
      "required": true
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "SonarQube Memory Limit",
      "description": "The maximum amount of memory that the SonarQube application is allowed to use (Min is 512Mi, recommended is 2Gi)",
      "value": "2Gi",
      "required": true
    },
    {
      "name": "PLUGINS_LIST",
      "displayName": "SonarQube Plugins List",
      "description": "Space separated list of plugins (See: https://docs.sonarqube.org/display/PLUG/Plugin+Version+Matrix)",
      "value": "findbugs pmd ldap buildbreaker github gitlab"
    },
    {
      "name": "WEB_JVM_OPTS",
      "displayName": "Extra SonarQube startup properties",
      "description": "Extra JVM startup properties for SonarQube (in the form of \"-Dsonar.someProperty=someValue\")"
    },
    {
      "name": "JDBC_URL",
      "displayName": "JDBC URL for connecting to the SonarQube database",
      "description": "Password used for SonarQube database authentication (leave blank to use ephemeral database)"
    },
    {
      "name": "LDAP_BINDDN",
      "displayName": "LDAP bind Distinguished Name",
      "description": "Bind DN for LDAP authentication (leave blank for local authentication)"
    },
    {
      "name": "LDAP_BINDPASSWD",
      "displayName": "LDAP bind password",
      "description": "Bind password for LDAP authentication (leave blank for local authentication)"
    },
    {
      "name": "LDAP_URL",
      "displayName": "LDAP server URL",
      "description": "LDAP URL for authentication (leave blank for local authentication)"
    },
    {
      "name": "LDAP_REALM",
      "displayName": "Security Realm",
      "description": "Leave blank if you are not using LDAP for authentication. Otherwise, set this to 'LDAP'"
    },
    {
      "name": "LDAP_CONTEXT_FACTORY",
      "displayName": "JNDI ContextFactory to be used",
      "description": "The context factory is a Java class which is used for creating bindings to LDAP servers. The default value should work with most LDAP servers.",
      "value": "com.sun.jndi.ldap.LdapCtxFactory"
    },
    {
      "name": "LDAP_STARTTLS",
      "displayName": "Enable StartTLS",
      "description": "Tells the LDAP plugin to use TLS for connections to the LDAP server",
      "value": "false"
    },
    {
      "name": "LDAP_AUTHENTICATION_METHOD",
      "displayName": "LDAP authentication method",
      "description": "Typical values include: simple | CRAM-MD5 | DIGEST-MD5 | GSSAPI",
      "value": "simple"
    },
    {
      "name": "LDAP_USER_BASEDN",
      "displayName": "LDAP user base Distinguished Name",
      "description": "LDAP BaseDN under which to search for user objects"
    },
    {
      "name": "LDAP_USER_REQUEST",
      "displayName": "LDAP user object filter",
      "description": "A filter definition which will cause the LDAP server to only return user objects",
      "value": "(\u0026(objectClass=inetOrgPerson)(uid={login}))"
    },
    {
      "name": "LDAP_USER_REAL_NAME_ATTR",
      "displayName": "LDAP user's real name atrribute",
      "description": "LDAP attribute on the user object which will be used to get the user's full name",
      "value": "cn"
    },
    {
      "name": "LDAP_USER_EMAIL_ATTR",
      "displayName": "LDAP user e-mail attribute",
      "description": "LDAP attribute which holds the user's e-mail address",
      "value": "mail"
    },
    {
      "name": "LDAP_GROUP_BASEDN",
      "displayName": "LDAP group base Distinguished Name",
      "description": "LDAP BaseDN under which to search for group objects"
    },
    {
      "name": "LDAP_GROUP_REQUEST",
      "displayName": "LDAP group object filter",
      "description": "A filter definition which will cause the LDAP server to only return group objects",
      "value": "(\u0026(objectClass=groupOfUniqueNames)(uniqueMember={dn}))"
    },
    {
      "name": "LDAP_GROUP_ID_ATTR",
      "displayName": "LDAP group ID attribute",
      "description": "LDAP attribute from the group object which holds the group's ID",
      "value": "cn"
    },
    {
      "name": "CA_CERT_URL",
      "displayName": "CA Certificate URL",
      "description": "Generally used so that SonarQube can communicate via SSL/TLS to an LDAP server for authentication (IdM).",
      "value": ""
    },
    {
      "name": "EXTRA_JVM_ARGS",
      "displayName": "Extra arguments to be passed to the JVM on start",
      "description": "Pass in arguments like '-Djavax.net.debug=ssl' to debug issues.",
      "required": false
    },
    {
      "name": "FORCE_AUTHENTICATION",
      "displayName": "Require Authentication",
      "description": "Require authentication for all requests to sonarqube",
      "value": "true"
    }
  ]
}
