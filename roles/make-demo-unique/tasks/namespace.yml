---

- set_fact:
    replacement_values:
    - match: 'NAMESPACE_DISPLAY_NAME'
      value: "{{ unique_name }}"
    - match: 'NAMESPACE_DESCRIPTION'
      value: "{{ unique_name }}"
    scm_url_replacement_value:
    - match: 'SOURCE_REPOSITORY_URL'
      value: "{{ scm_url }}"
    scm_ref_replacement_value:
    - match: 'SOURCE_REPOSITORY_REF'
      value: "{{ scm_ref }}"
    scm_refs_to_replace: []

- name: "Append the demo projectname in the params files"
  replace:
    path: "{{ content.params }}"
    regexp: '^(.*NAMESPACE.*)=(.*)$'
    replace: '\1=\2{{ unique_id }}'
  with_items:
  - "{{ item.content }}"
  loop_control:
    loop_var: content 

- name: "Change the 'unique_id value to a different value for certain entries"
  replace:
    path: "{{ content.0.params }}"
    regexp: '^({{ content.1.match }})=(.*)({{ unique_id }})$'
    replace: '\1=\2 {{ content.1.value }}'
  with_nested:
  - "{{ item.content }}"
  - "{{ replacement_values }}"
  loop_control:
    loop_var: content 

- name: "Update SCM URL related config"
  replace:
    path: "{{ content.0.params }}"
    regexp: '^(.*SOURCE_REPOSITORY_URL)=(https:\/\/github\.com\/rht-labs\/labs-ci-cd.*)'
    replace: '\1={{ content.1.value }}'
  with_nested:
  - "{{ item.content }}"
  - "{{ scm_url_replacement_value }}"
  when:
  - content.1.value|trim != ''
  loop_control:
    loop_var: content
  register: command_output

- name: "Parse out the params files that need to be updated"
  set_fact:
    scm_refs_to_replace: "{{ scm_refs_to_replace }} + [ '{{ itemm.invocation.module_args.path }}' ] "
  with_items:
  - "{{ command_output.results }}"
  loop_control:
    loop_var: itemm
  when: itemm['changed'] == true

- name: "Update SCM REF related config"
  replace:
    path: "{{ content.0.params }}"
    regexp: '^(.*SOURCE_REPOSITORY_REF)=.*$'
    replace: '\1={{ content.1.value }}'
  with_nested:
  - "{{ item.content }}"
  - "{{ scm_ref_replacement_value }}"
  when:
  - content.1.value|trim != ''
  - content.0.params in scm_refs_to_replace
  loop_control:
    loop_var: content
